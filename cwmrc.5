.\"	$OpenBSD$
.\"
.\" Copyright (c) 2004,2005 Marius Aamodt Eriksen <marius@monkey.org>
.\" Copyright (c) 2016 Thomas Adam <thomas@xteddy.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate$
.Dt CWMRC 5
.Os
.Sh NAME
.Nm cwmrc
.Nd calm window manager configuration file
.Sh DESCRIPTION
This manual page describes the
.Xr cwm 1
configuration file.
.Pp
The format of the configuration file uses libconfuse.
All formatting rules which libconfuse allows for is valid.
.Pp
The current line can be extended over multiple lines using a backslash
.Pq Sq \e .
Comments can be put anywhere in the file using a hash mark
.Pq Sq # ,
or using C-style comments
.Pq Sq /* */
or
.Pq Sq //
.Pp
Arguments containing whitespace should be surrounded by double quotes
.Pq \&" .
.Pp
There are three main configuration sections which can be present in
.Nm
.Pp
.Ss Bindings
This section can contain both
.Em key
and
.Em mouse
sections.
Each section has a title, which refers either to the modifier (if
.Em key
is used)
or the mouse button (if
.Em mouse
is used)
The modifier keys come first, followed by a
.Sq - .
.Pp
The following modifiers are recognised:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It Ic C
Control key.
.It Ic M
Meta key.
.It Ic S
Shift key.
.It Ic 4
Mod4 (windows) key.
.El
.Pp
The
.Sq -
should be followed by a keysym name, taken from
.Pa /usr/X11R6/include/X11/keysymdef.h .
Or, if
.Em mouse
is used:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It Ic 1
Left mouse button.
.It Ic 2
Middle mouse button.
.It Ic 3
Right mouse button.
.It Ic 4
Scroll up mouse button.
.It Ic 5
Scroll down mouse button.
.El
.Pp
The
.Ar command
may either be one from the
.Sx BIND COMMAND LIST
(see below) or the command line that is to be executed.
.Pp
A special
.Ar command
keyword
.Dq unmap
can be used to remove the named key binding.
This can be used to remove a binding which conflicts with an
application.
.Pp
Each section then has the command to run.
For a list of commands which are valid, see the section on
.Sx BIND COMMAND LIST .
Or
.Sx MOUSEBIND COMMAND LIST .
If using a mouse binding.
.Pp
Example:
.Bd -literal -offset -indent
bindings {
	key CM-s { command = maximize }
	mouse 1 { command = unmap }
}
.Ed
.Pp
.Ss Clients
.Pp
This block configures specific clients.
The name of the client can be either
.Em windowclass
or
.Em windowname,windowclass
If their class property matches
.Ar windowclass ,
or if their name and class properties match
.Ar windowname
and
.Ar windowclass ,
respectively.
The more specific last match wins.
.Pp
The name and class values, respectively, for existing windows
are both set in the WM_CLASS property and may be obtained using
.Xr xprop 1 .
.Pp
The following options are valid within a
.Ar client
block.
.Pp
.Bl -tag -width Ds -compact
.It Ic autogroup = Ar group
Automatically add new windows to the specified group.
Where
.Ar group
is a number between 0 and 9.
.Pp
.It Ic ignore = Ar boolean
Ignore, and do not warp to, this client.
This also will set the client's borderwidth to 0.
.Ar boolean
can be a value of
.Ar true
or
.Ar false
.Pp
Note:  clients which are marked as sticky (appear in all groups on a given
output), retain a per-group geometry.
That is, it's possible to reposition sticky windows independently on
different groups.
.Pp
.El
Example:
.Bd -literal -offset -indent
clients {
	client "xterm,Xterm" {
		autogroup = 9
		ignore = true
	}
}
.Ed
.Pp
.Ss Screens
This section controls per-screen configuration and can contain a number of
blocks.  See
.Sx Groups
and
.Sx Color .
.Pp
The screen must have a title, and can be be
.Ar *
to indicate any/all screens, or it can be the name of a RandR output taken from
.Xr xrandr 1 .
.Pp
The following options are valid within this section.
.Pp
.Bl -tag -width Ds -compact
.It Ic gap = Ar {top,bottom,left,right}
Define a
.Dq gap
in pixels at the edge of the screen, so that when a
window is maximized it will not overlap this area.
This
.Dq gap
can be used for applications such as
.Xr xclock 1 ,
where the user may wish to remain visible.
.Pp
.It Ic moveamount = Ar pixels
Set a default size for the keyboard movement bindings,
in pixels.
The default is 1.
.Pp
.It Ic snapdist = Ar pixels
Minimum distance to snap-to adjacent edge, in pixels.
The default is 0.
.Pp
.El
.Pp
.Ss Groups
.Pp
This section controls properties which can be applied to groups.
Each
.Ar group
block must have a title, and can be on of
.Ar *
for all groups,
or a number between
.Ar 0
and
.Ar 9
for individual groups.
.Pp
Within a
.Ar group
block, there can be other blocks which describe other properties.
.Pp
The
.Ar group
block is only valid inside a given
.Ar screen
block.
.Pp
Valid options are:
.Pp
.Bl -tag -width Ds -compact
.It Ic borderwidth = Ar pixels
Set the window border width to
.Ar pixels .
.El
.Pp
Example:
.Pp
.Bd -literal -offset -indent
groups {
	group * {
		borderwidth = 6
	}
}
.Ed
.Ss Color
This block, which is only valid within a
.Sx Group
block, denotes the default properties clients in the group should have.
.Pp
.Bl -tag -width Ds -compact
.It Ic activeborder = Ar color
Set the color of the active border.
.Pp
.It Ic font = Ar color
Set menu font color.
.Pp
.It Ic fontsel = Ar color
Set font color for selected menu item.
.Pp
.It Ic groupborder = Ar color
Set the color of the border while grouping a window.
.Pp
.It Ic inactiveborder = Ar color
Set the color of the inactive border.
.Pp
.It Ic menubg = Ar color
Set menu background color.
.Pp
.It Ic menufg = Ar color
Set menu foreground color.
.Pp
.It Ic urgencyborder = Ar color
Set the color of the border of a window indicating urgency.
.Pp
.It Ic ungroupborder = Ar color
Set the color of the border while ungrouping a window.
.Pp
.El
.Pp
Example:
.Bd -literal -offset -indent
color {
	activeborder = '#3BC6D4'
	inactiveborder = grey
	menubg = '#66ba66'
	menufg = black
	fontsel = white
}
.Ed
.Pp
.Ss Menu
This block describes items which should appear in cwm's menu.
Within this block is the
.Ar item
block which takes the name of the item to appear, and the following option:
.Pp
.Bl -tag -width Ds -compact
.It Ic command = Ar path
The
.Ar path
is executed with
.Xr execve 2 .
.El
.Pp
There is a default menu with the following already present entries
.Nm term
and
.Nm lock
have a special meaning.
They point to the terminal and screen locking programs specified by
key bindings.
The defaults are
.Xr xterm 1
and
.Xr xlock 1 ,
respectively.
.Pp
Example:
.Pp
.Bd -literal -offset -indent
menu {
        item chromium {
                command = chromium
        }

        item firefox {
                command = iceweasel
        }
}
.Ed
.Pp
.Sh BIND COMMAND LIST
.Bl -tag -width 18n -compact
.It restart
Restart the running
.Xr cwm 1 .
.It quit
Quit
.Xr cwm 1 .
.It terminal
Spawn a new terminal.
.It lock
Lock the screen.
.It search
Launch window search menu.
.It menusearch
Launch application search menu.
.It groupsearch
Launch group search menu.
.It exec
Launch
.Dq exec program
menu.
.It exec_wm
Launch
.Dq exec WindowManager
menu.
.It ssh
Launch
.Dq ssh
menu.
.It group[n]
Select group n, where n is 1-9.
.It grouponly[n]
Like
.Ar group[n]
but also hides the other groups.
.It nogroup
Select all groups.
.It grouptoggle
Toggle group membership of current window.
.It movetogroup[n]
Hide current window from display and move to group n, where n is 1-9.
.It cyclegroup
Forward cycle through groups.
.It rcyclegroup
Reverse cycle through groups.
.It cycle
Forward cycle through windows.
.It rcycle
Reverse cycle through windows.
.It cycleingroup
Forward cycle through windows in current group.
.It rcycleingroup
Reverse cycle through windows in current group.
.It delete
Delete current window.
.It hide
Hide current window.
.It lower
Lower current window.
.It raise
Raise current window.
.It label
Label current window.
.It freeze
Freeze current window geometry.
.It sticky
Stick current window to all groups (same as assigning to nogroup).
.It fullscreen
Full-screen current window (gap + border removed).
.It maximize
Maximize current window (gap + border honored).
.It vmaximize
Vertically maximize current window (gap + border honored).
.It hmaximize
Horizontally maximize current window (gap + border honored).
.It moveup
Move window
.Ar moveamount
pixels up.
.It movedown
Move window
.Ar moveamount
pixels down.
.It moveright
Move window
.Ar moveamount
pixels right.
.It moveleft
Move window
.Ar moveamount
pixels left.
.It bigmoveup
Move window 10 times
.Ar moveamount
pixels up.
.It bigmovedown
Move window 10 times
.Ar moveamount
pixels down.
.It bigmoveright
Move window 10 times
.Ar moveamount
pixels right.
.It bigmoveleft
Move window 10 times
.Ar moveamount
pixels left.
.It resizeup
Resize window
.Ar moveamount
pixels up.
.It resizedown
Resize window
.Ar moveamount
pixels down.
.It resizeright
Resize window
.Ar moveamount
pixels right.
.It resizeleft
Resize window
.Ar moveamount
pixels left.
.It bigresizeup
Resize window 10 times
.Ar moveamount
pixels up.
.It bigresizedown
Resize window 10 times
.Ar moveamount
pixels down.
.It bigresizeright
Resize window 10 times
.Ar moveamount
pixels right.
.It bigresizeleft
Resize window 10 times
.Ar moveamount
pixels left.
.It ptrmoveup
Move pointer
.Ar moveamount
pixels up.
.It ptrmovedown
Move pointer
.Ar moveamount
pixels down.
.It ptrmoveright
Move pointer
.Ar moveamount
pixels right.
.It ptrmoveleft
Move pointer
.Ar moveamount
pixels left.
.It bigptrmoveup
Move pointer 10 times
.Ar moveamount
pixels up.
.It bigptrmovedown
Move pointer 10 times
.Ar moveamount
pixels down.
.It bigptrmoveright
Move pointer 10 times
.Ar moveamount
pixels right.
.It bigptrmoveleft
Move pointer 10 times
.Ar moveamount
pixels left.
.It htile
Current window is placed at the top of the screen and maximized
horizontally, other windows in its group share remaining screen space.
.It vtile
Current window is placed on the left of the screen and maximized
vertically, other windows in its group share remaining screen space.
.It snapup
Move the window to the closest window north, or the screen's edge.
.It snapdown
Move the window to the closest window south, or the screen's edge.
.It snapleft
Move the window to the closest window east, or the screen's edge.
.It snapright
Move the window to the closest window west, or the screen's edge.
.It expand
Maximizes a window to fill the gap, stopping at the closest edge of windows
in all direction.
.It toggle_border
Toggles the window border width to 0 (off) or the configured borderwidth.
.El
.Pp
.Sh MOUSEBIND COMMAND LIST
.Bl -tag -width 18n -compact
.It window_move
Move current window.
.It window_resize
Resize current window.
.It window_lower
Lower current window.
.It window_raise
Raise current window.
.It window_hide
Hide current window.
.It window_grouptoggle
Toggle group membership of current window.
.It cyclegroup
Forward cycle through groups.
.It rcyclegroup
Reverse cycle through groups.
.It menu_group
Launch group list.
.It menu_unhide
Launch hidden window list.
.It menu_cmd
Launch command list.
.Sh FILES
.Bl -tag -width "~/.cwm-newrcXXX" -compact
.It Pa ~/.cwm-newrc
Default
.Xr cwm 1
configuration file.
.El
.Sh CONVERTING FROM CWM
It's possible to convert
.Em .cwmrc
to this format, see:
.Pp
.Em examples/config/convert-cwmrc.pl
.Sh EXAMPLE
See
.Em examples/config/cwmrc-example
.Sh SEE ALSO
.Xr cwm 1
